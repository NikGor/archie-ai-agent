[tool.poetry]
name = "archie-ai-agent"
version = "0.1.0"
description = ""
authors = ["Nikolaj Gordienko <nicolas.gordienko@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
python-dotenv = "^1.1.1"
openai = "^1.54.4"
jinja2 = "^3.1.6"
numpy = "<2.0.0"
sounddevice = "^0.5.2"
simpleaudio = "^1.0.4"
fastapi = "^0.115.0"
uvicorn = "^0.31.1"
httpx = "^0.27.0"
pyyaml = "^6.0.2"

[tool.poetry.group.dev.dependencies]
black = "^24.0.0"
mypy = "^1.8.0"
ruff = "^0.6.0"
types-pyyaml = "^6.0.12.20250915"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  __pycache__
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | build
  | dist
)/
'''

# MyPy configuration is in .mypy.ini

[tool.ruff]
target-version = "py310"
line-length = 88
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__pycache__",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PIE", # flake8-pie
    "A",   # flake8-builtins
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "B904",   # raise exceptions with from err or from None
    "PLR0913", # too many arguments to function call
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "PLW0603", # global statement usage
    "RUF001", # ambiguous characters (for cyrillic text)
    "RUF013", # implicit optional (we're using more relaxed type checking)
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["app"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
